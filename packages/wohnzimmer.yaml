homeassistant:
  customize:
    media_player.pi_media_mpd:
      friendly_name: Radio und Musik Player
    media_player.pi_media_kodi:
      icon: mdi:kodi
    device_tracker.win10:
      icon: mdi:laptop
    device_tracker.barbarasipad:
      icon: mdi:tablet
    binary_sensor.bs_vusolo4k:
      icon: mdi:television
      friendly_name: VU Solo 4K
    binary_sensor.bs_pi_media:
      friendly_name: Kodi Media
      icon: mdi:raspberrypi
    binary_sensor.bs_fritz_box_7390:
      friendly_name: Fritz Box 7390
      icon: mdi:raspberrypi

input_select:
  remote:
    name: Wohnzimmer Remote
    options:
      - PowerOff
      - Musik hören
      - Filme ansehen
      - Fernsehen
      - DVD wiedergeben
      - RSH Wohnzimmer
      - RSH Keller An
      - RSH Keller aus
    icon: mdi:remote

input_number:
  auto_light_offset_off:
    name: Minuten nach 22Uhr
    icon: mdi:timer
    min: 0
    max: 120
    step: 10

  auto_aquarium_offset_on:
    name: Minuten vor Sonnenaufgang
    icon: mdi:timer
    min: 0
    max: 60
    step: 10

  in_mpd_wohn:
    name: Wohnlautstärke
    mode: slider
    min: 0
    max: 1
    step: 0.05  

  in_mpd_volume:
    name: Masterlautstärke
    mode: slider
    min: 0
    max: 1
    step: 0.05

binary_sensor:
  - platform: ping
    count: 2
    host: pi-media.fritz.box
    name: bs_pi_media

  - platform: ping
    count: 2
    host: 10.10.10.11
    name: bs_fritz_box_7390

  - platform: ping
    count: 2
    host: vusolo4k.fritz.box
    name: bs_vusolo4k

  - platform: mqtt
    name: Aquarium Tracker
    state_topic: "/home/tele/Aquarium/LWT"
    payload_on: "online"
    payload_off: "offline"
    device_class: "connectivity"

  - platform: template
    sensors:
      bs_play_rsh:
        friendly_name: "RSH läuft"
        device_class: sound
        value_template: >-
                    {% if is_state('media_player.pi_media_mpd', 'playing') %}
                     {% if states.media_player.pi_media_mpd.attributes.media_title[0:4] == 'R.SH' %}
                       true
                     {% else %}
                       false
                     {% endif %}
                    {% else %}
                     false
                    {% endif %}
 
  - platform: template
    sensors:
      bs_play_1live:
        friendly_name: "1LIVE läuft"
        device_class: sound
        value_template: >-
                    {% if is_state('media_player.pi_media_mpd', 'playing') %}
                     {% if states.media_player.pi_media_mpd.attributes.media_title[0:4] == '1Liv' %}
                      true
                     {% else %}
                      false
                     {% endif %}
                    {% else %}
                     false
                    {% endif %}

  - platform: template
    sensors:
      bs_play_mpd:
        friendly_name: "MPD läuft"
        device_class: sound
        value_template: "{{ is_state('media_player.pi_media_mpd', 'playing') }}"



sensor:
  - platform: fritzbox_netmonitor
    name: s_fritzbox_netmonitor_7390
    state_topic: "home/technik/fritz"
    Host: fritz7390.fritz.box

  - platform: template
    sensors:
      auto_aquarium_start:
        friendly_name: 'Lichter an um '
        value_template: '{{ (as_timestamp(states.sun.sun.attributes.next_rising) - (states("input_number.auto_aquarium_offset_on") | int)  * 60)  | timestamp_custom("%H:%M") }}'
      auto_aquarium_stop:
        friendly_name: 'Lichter aus um '
        value_template: '{{ (as_timestamp("2017-06-09T20:00:00+00:00") + (states("input_number.auto_light_offset_off") | int)  * 60)  | timestamp_custom("%H:%M") }}'

  - platform: mqtt
    state_topic: "/home/tele/Aquarium/STATE"
    name: Schalter Aquarium Wlan
    unit_of_measurement: "%"
    value_template:  "{{value_json['Wifi'].RSSI}}"

  - platform: mqtt
    name: Schalter Aquarium V
    state_topic: "/home/tele/Aquarium/STATE"
    unit_of_measurement: "V"
    value_template:  "{{value_json.Vcc}}"

  - platform: mqtt
    name: Schalter Aquarium LZ
    state_topic: "/home/tele/Aquarium/STATE"
    unit_of_measurement: "h"
    value_template:  "{{value_json.Uptime}}"

  - platform: mqtt
    state_topic: "/home/tele/Aquarium/SENSOR"
    name: Wohnzimmer Temperatur
    unit_of_measurement: "°C"
    value_template: "{{value_json['BME280'].Temperature}}"

  - platform: mqtt
    state_topic: "/home/tele/Aquarium/SENSOR"
    name: Druck
    unit_of_measurement: "hPa"
    value_template: "{{value_json['BME280'].Pressure}}"

  - platform: mqtt
    state_topic: "/home/tele/Aquarium/SENSOR"
    name: Wohnzimmer Feuchte
    unit_of_measurement: "%"
    value_template: "{{value_json['BME280'].Humidity}}"

history_graph:
  gr21:
    name: Wohnzimmer Graph
    entities:
     - sensor.wohnzimmer_temperatur
     - sensor.wohnzimmer_feuchte
     - sensor.druck
    hours_to_show: 240
    refresh: 60

media_player:
  - platform: enigma
    host: vusolo4k.fritz.box

  - platform: kodi
    name: pi_media_kodi
    host: 10.10.10.25

  - platform: mpd
    name: pi_media_mpd
    host: 10.10.10.25
 
  - platform: snapcast
    name: pi_media_snapcast
    host: 10.10.10.25

light:
  - platform: mqtt
    name: Schalter Aquarium
    state_topic: "/home/stat/Aquarium/POWER"
    command_topic: "/home/cmnd/Aquarium/POWER"
    availability_topic: "/home/tele/Aquarium/LWT"
    payload_available: "online"
    payload_not_available: "offline"
    qos: 1
    optimistic: false
    retain: true

switch:

  - platform: template
    switches:
      sw_mpd_hrs:
        friendly_name: RSH
        value_template: "{{ is_state('binary_sensor.bs_play_rsh', 'on') }}"
        turn_on:
          service: script.sc_hsr
        turn_off:
          service: media_player.turn_off
          data:
            entity_id: media_player.pi_media_mpd

      sw_mpd_einslive:
        friendly_name: 1LIVE
        value_template: "{{ is_state('binary_sensor.bs_play_1live', 'on') }}"
        turn_on:
          service: script.sc_einslive
        turn_off:
          service: media_player.turn_off
          data:
            entity_id: media_player.pi_media_mpd


script:
  input_select_harmony:
    alias: "Start Remote activity from input select"
    sequence:
      - service: remote.turn_on
        data_template:
          entity_id: remote.wohnzimmer
          activity: >
            {% if is_state("input_select.remote", "PowerOff") %} -1
            {% elif is_state("input_select.remote", "Musik hören") %} 31664117
            {% elif is_state("input_select.remote", "Filme ansehen") %} 31664109
            {% elif is_state("input_select.remote", "Fernsehen") %} 31664108
            {% elif is_state("input_select.remote", "DVD wiedergeben") %} 31664107
            {% elif is_state("input_select.remote", "RSH Wohnzimmer") %} 31740636
            {% elif is_state("input_select.remote", "RSH Keller An") %} 31967682
            {% elif is_state("input_select.remote", "RSH Küche") %} 32119083
            {% endif %}


  sc_hsr:
    alias: "Start HRS"
    sequence:
      - service: media_player.play_media
        data:
          entity_id: media_player.pi_media_mpd
          media_content_id: radiostationen
          media_content_type: playlist
      - service: media_player.volume_set
        data:
          entity_id: media_player.pi_media_mpd
          volume_level: 1
      - service: notify.wolfhome
        data:
          title: '*Radio*'
          message: 'Radio R.SH' 

  sc_einslive:
    alias: "Start 1LIVE"
    sequence:
      - service: media_player.play_media
        data:
          entity_id: media_player.pi_media_mpd
          media_content_id: einslive
          media_content_type: playlist
      - service: media_player.volume_set
        data:
          entity_id: media_player.pi_media_mpd
          volume_level: 1
      - service: notify.wolfhome
        data:
          title: '*Radio*'
          message: 'Radio 1LIVE' 

automation:

  - alias: Media - Remote start activity from input select media center
    trigger:
      - platform: state
        entity_id: input_select.remote

    action:
      - service: script.turn_on
        entity_id: script.input_select_harmony
        
  - alias: Aquarium Licht an
    trigger:
      platform: sun
      event: sunrise
    action:
      - service: notify.wolfhome
        data:
          title: '*Aquarium*'
          message: 'The sun is up.' 
      - service: light.turn_on
        entity_id: light.schalter_aquarium
      

  - alias: Aquarium Licht aus
    trigger:
      platform: time
#      at: '{{ states("sensor.auto_aquarium_stop")}}'
      at: '22:00'
    action:
      - service: notify.wolfhome
        data:
          title: '*Aquarium*'
          message: 'The sun is down.'
      - service: light.turn_off
        entity_id: light.schalter_aquarium
#    offset: (states("input_number.auto_light_offset_off") | int)

  - alias: "PowerOff started from Harmony Hub"
    trigger:
      platform: state
      entity_id: remote.wohnzimmer
    condition:
      condition: template
      value_template: '{{ trigger.to_state.attributes.current_activity == "PowerOff" }}'
    action:
      service: input_select.select_option
      entity_id: input_select.remote
      data:
        option: "PowerOff"

  - alias: "Musik hören started from Harmony Hub"
    trigger:
      platform: state
      entity_id: remote.wohnzimmer
    condition:
      condition: template
      value_template: '{{ trigger.to_state.attributes.current_activity == "Musik hören" }}'
    action:
      service: input_select.select_option
      entity_id: input_select.remote
      data:
        option: "Musik hören"

  - alias: "Filme ansehen started from Harmony Hub"
    trigger:
      platform: state
      entity_id: remote.wohnzimmer
    condition:
      condition: template
      value_template: '{{ trigger.to_state.attributes.current_activity == "Filme ansehen" }}'
    action:
      service: input_select.select_option
      entity_id: input_select.remote
      data:
        option: "Filme ansehen"

  - alias: "Fernsehen started from Harmony Hub"
    trigger:
      platform: state
      entity_id: remote.wohnzimmer
    condition:
      condition: template
      value_template: '{{ trigger.to_state.attributes.current_activity == "Fernsehen" }}'
    action:
      service: input_select.select_option
      entity_id: input_select.remote
      data:
        option: "Fernsehen"

  - alias: "DVD wiedergeben started from Harmony Hub"
    trigger:
      platform: state
      entity_id: remote.wohnzimmer
    condition:
      condition: template
      value_template: '{{ trigger.to_state.attributes.current_activity == "DVD wiedergeben" }}'
    action:
      service: input_select.select_option
      entity_id: input_select.remote
      data:
        option: "DVD wiedergeben"

  - alias: "RSH started from Harmony Hub"
    trigger:
      platform: state
      entity_id: remote.wohnzimmer
    condition:
      condition: template
      value_template: '{{ trigger.to_state.attributes.current_activity == "RSH Wohnzimmer" }}'
    action:
      - service: remote.turn_on
        entity_id: remote.wohnzimmer
        data:
          activity: 31740636
      - service: switch.turn_on
        entity_id: switch.sw_mpd_hrs
 
  - alias: Lautstaerke - Wohn
    trigger:
      platform: state
      entity_id: input_number.in_mpd_wohn
    condition:
      condition: state
      entity_id: media_player.pi_media_mpd
      state: 'playing'
    action:
      - service: media_player.volume_set
        # Note the use of 'data_template:' below rather than the normal 'data:' if you weren't using an input variable
        data_template:
          entity_id: media_player.snapcast_client_d5d917ad2f9e480bb350971480de5e5f
          volume_level: '{{ trigger.to_state.state }}'
      - service: notify.wolfhome
        data:
          title: '*Radio*'
          message: 'Wohnlautstärke {{ trigger.to_state.state }}' 

  - alias: Lautstaerke - Master
    trigger:
      platform: state
      entity_id: input_number.in_mpd_volume
    condition:
      condition: state
      entity_id: media_player.pi_media_mpd
      state: 'playing'
    action:
      - service: media_player.volume_set
        # Note the use of 'data_template:' below rather than the normal 'data:' if you weren't using an input variable
        data_template:
          entity_id: media_player.pi_media_mpd
          volume_level: '{{ trigger.to_state.state }}'
      - service: notify.wolfhome
        data:
          title: '*Radio*'
          message: 'Masterlautstärke {{ trigger.to_state.state }}' 

  - alias: Radio Aus VU
    trigger:
      platform: state
      entity_id: media_player.solo4k
      from: 'off'
      to: 'on'
    condition:
      condition: state
      entity_id: media_player.pi_media_mpd
      state: 'playing'
    action:
      - service: media_player.turn_off
        # Note the use of 'data_template:' below rather than the normal 'data:' if you weren't using an input variable
        data_template:
          entity_id: media_player.pi_media_mpd
      - service: switch.turn_off
        entity_id: switch.radio_schalter_kueche
      - service: notify.wolfhome
        data:
         title: '*Radio*'
         message: ' aus VU' 

group:
  g_wohnzimmer_tracker:
    name: Tracker Wohnzimmer
    view: no
    entities:
    - binary_sensor.bs_pi_media
    - binary_sensor.aquarium_tracker
    - device_tracker.win10
    - device_tracker.ipadvonbarbara
    - device_tracker.barbarasipad
    - binary_sensor.bs_vusolo4k

  g_wohnzimmer_sensor:
    name: Sensor Wohnzimmer
    view: no
    entities:
    - sensor.wohnzimmer_temperatur
    - sensor.wohnzimmer_feuchte
    - sensor.Druck

  g_aquarium:
    view: no
    name: Aquarium
    entities:
    - sensor.auto_aquarium_start
    - sensor.auto_aquarium_stop
    - group.g_aqu
    - input_number.auto_aquarium_offset_on
    - input_number.auto_light_offset_off
    - automation.auto_light_on_enabled
  g_aqu:
    name: Aquarium Licht
    view: no
    entities:
    - weblink.licht_schalter_aquarium_web
    - light.schalter_aquarium
    - sensor.schalter_aquarium_wlan
    - sensor.schalter_aquarium_v
    - sensor.schalter_aquarium_lz

  g_wohnzimmer:
    name: Wohnzimmer
    icon: mdi:sofa
    view: yes
    entities:
    - group.g_wohnzimmer_tracker
    - group.g_wohnzimmer_sensor
    - history_graph.wohnzimmer_graph
    - input_select.remote
    - media_player.solo4k
    - media_player.snapcast_group_685b0ba4aa169c9fc274a67d06fd6314
    - media_player.snapcast_group_8b334ce0fbad2a30d773025e84c8f3a7
    - media_player.snapcast_client_d5d917ad2f9e480bb350971480de5e5f
    - media_player.pi_media_kodi
    - media_player.pi_media_mpd
    - group.g_aquarium
